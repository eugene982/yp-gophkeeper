syntax = "proto3";

import "google/protobuf/empty.proto";
import "buf/validate/validate.proto";

package gophermart.v1;

option go_package = "github.com/eugene982/yp-gophermart/proto";

service GophKeeper {
    // Ping проверка соединения
    rpc Ping(google.protobuf.Empty) returns (PingResponse);

    // Register регистрация нового пользователя
    rpc Register(RegisterRequest) returns (RegisterResponse);

    // Login регистрация нового пользователя
    rpc Login(LoginRequest) returns (LoginResponse);

    // List возвращает количество хранимых данных пользователя (защищённый)
    rpc List(google.protobuf.Empty) returns (ListResponse); 

    // PasswordList - возвращает список паролей пользователя
    rpc PasswordList(google.protobuf.Empty) returns (PasswordListResponse);

    // PasswordWrite запись нового пароля
    rpc PasswordWrite(PasswordWriteRequest) returns (google.protobuf.Empty);

    // PasswordUpdate обновление имеющегочя пароля
    rpc PasswordUpdate(PasswordWriteRequest) returns (google.protobuf.Empty);

     // PasswordRead удаление пароля
     rpc PasswordRead(PasswordReadRequest) returns (google.protobuf.Empty);
    
    // PasswordDelete удаление пароля
    rpc PasswordDelete(PasswordReadRequest) returns (google.protobuf.Empty);
}

// Ping
message PingResponse {
    string message = 1;
}

// Register
message RegisterRequest {
    string login = 1[(buf.validate.field).string.min_len = 1, (buf.validate.field).string.max_len = 64];
    string password = 2[(buf.validate.field).string.max_len = 64];
}

message RegisterResponse {
    string token = 1;
}

// Login 
message LoginRequest {
    string login    = 1[(buf.validate.field).string.min_len = 1, (buf.validate.field).string.max_len = 64];
    string password = 2[(buf.validate.field).string.max_len = 64];    
}

message LoginResponse {
    string token = 1;    
}

// List 
message ListResponse {
    int32 passwords_count = 1; // количество хранимых пользователем паролей
    int32 notes_count     = 2; // количество заметок
    int32 cards_count     = 3; // количество кредитных карт
}

// Password 
message PasswordListResponse {
    repeated string names = 1;  // массив наименований  
}

message PasswordWriteRequest {
    string name     = 1[(buf.validate.field).string.min_len = 1, (buf.validate.field).string.max_len = 64];
    string username = 2[(buf.validate.field).string.max_len = 128];
    string password = 3[(buf.validate.field).string.max_len = 128];
    string notes    = 4;
}

message PasswordReadRequest {
    string name = 1[(buf.validate.field).string.min_len = 1];
}

message PasswordResponse {
    string name     = 1;
    string username = 2;
    string password = 3;
    string notes    = 4;
}
